#!/bin/bash

[[ -n "$LKP_SRC" ]] || LKP_SRC=$(dirname $(dirname $(readlink -e -v $0)))

set -e

. $LKP_SRC/lib/docker.sh

while getopts "d:i:j:g:t:-:" opt; do
	case $opt in
		i)
			opt_image="$OPTARG"
			;;
		j)
			opt_job_yaml="$OPTARG"
			;;
		d)
			opt_test_dir="$OPTARG"
			;;
		g)
			opt_pattern="$OPTARG"
			;;
		t)
			opt_container="$OPTARG"
			;;
		-)
			case "${OPTARG}" in
				container)
					opt_container="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				image)
					opt_image="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				hostname)
					opt_hostname="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				job-yaml)
					opt_job_yaml="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				pattern)
					opt_pattern="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				proxy)
					opt_proxy="${!OPTIND}"
					OPTIND=$((OPTIND + 1))
					;;
				recreate)
					opt_recreate=true
					;;
				*)
					echo "Unknown option --${OPTARG}"
					exit 1
					;;
			esac
			;;
	esac
done

shift $((OPTIND - 1))

opt_hostname=${opt_hostname:-$LKP_DOCKER_HOSTNAME}
opt_test_dir=${opt_test_dir:-$LKP_DOCKER_TEST_DIR}

[[ $opt_container ]] && load_container "$opt_container"

[[ $opt_job_yaml ]] || {
	echo "No job yaml specified. Use -j <job_yaml> to specify a job yaml."
	exit 1
}

cmd="$LKP_SRC/docker/run -i $opt_image --hostname $opt_hostname -d $opt_test_dir"
[[ "$opt_recreate" = true ]] && cmd="$cmd --recreate"

exec_cmd $cmd

test()
{
	local job_yaml="$1"
	local pattern="$2"
	local action="$3"
	local proxy="$4"

	# echo "$(whoami): $FUNCNAME: '$job_yaml' '$pattern' '$proxy'"

	[[ "$job_yaml" == /* ]] || job_yaml=/lkp/lkp-tests/jobs/$job_yaml

	local job_dir=/lkp/jobs/$(basename "$job_yaml")

	mkdir -p $job_dir
	lkp split-job "$job_yaml" -o $job_dir || return

	local jobs=($job_dir/*$pattern*.yaml)

	local proxy_env
	[[ $proxy ]] && proxy_env="http_proxy=$proxy https_proxy=$proxy"

	eval ${proxy_env} lkp install "${jobs[0]}" && [[ $action = test ]] && {
		for job in "${jobs[@]}"
		do
			lkp run "$job"
		done
	}

	rm -rf $job_dir
}

script_name=$(basename $0)

case $script_name in
install)
	docker exec $opt_hostname bash -c "$(declare -f test); test \"$opt_job_yaml\" \"$opt_pattern\" \"install\" \"$opt_proxy\""
	;;
test)
	docker exec $opt_hostname bash -c "$(declare -f test); test \"$opt_job_yaml\" \"$opt_pattern\" \"test\" \"$opt_proxy\""
	;;
esac
